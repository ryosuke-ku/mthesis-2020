@INPROCEEDINGS{alex_nips12,
 author = {A. Krizhevsky and I. Sutskever and  G.E. Hinton},
 title = {ImageNet Classification with Deep Convolutional Neural Networks},
 booktitle = {Advances in Neural Information Processing Systems 25(NIPS'12)},
 pages = {1097--1105},
 year = {2012}
}

@article{caffe,
 author    = {Y. Jia and
               E. Shelhamer and
               J. Donahue and
               S. Karayev and
               J. Long and
               R. B. Girshick and
               S. Guadarrama and
               T. Darrell},
 title     = {Caffe: Convolutional Architecture for Fast Feature Embedding},
 journal   = {CoRR},
 volume    = {abs/1408.5093},
 year      = {2014},
 url       = {http://arxiv.org/abs/1408.5093},
}

@inproceedings{b1,
author={S. {Shamshiri} and J. M. {Rojas} and J. P. {Galeotti} and N. {Walkinshaw} and G. {Fraser}},
booktitle={2018 IEEE 11th International Conference on Software Testing, Verification and Validation (ICST)},
title={How Do Automatically Generated Unit Tests Influence Software Maintenance?},
year={2018},
volume={},
number={},
pages={250-261},
keywords={program testing;software maintenance;automated test generation;automatically generated unit tests;software maintenance;Task analysis;Maintenance engineering;Software maintenance;Test pattern generators;Java;Biological cells;Software maintenance;Automated test generation;Empirical software engineering;Software testing;Test maintenance},
doi={10.1109/ICST.2018.00033},
ISSN={null},
month={April},
}

@inproceedings{b2,
author={C. K. {Roy} and J. R. {Cordy}},
booktitle={2008 16th IEEE International Conference on Program Comprehension},
title={NICAD: Accurate Detection of Near-Miss Intentional Clones Using Flexible Pretty-Printing and Code Normalization},
year={2008},
volume={},
number={},
pages={172-181},
keywords={grammars;program compilers;specification languages;text analysis;NICAD;near-miss intentional clones;pretty-printing;code normalization;language-specific parser;lightweight clone detection approach;source transformation system;near-miss clones;text line comparison technique;agile parsing;island grammars;Cloning;Filtering;Software systems;Printing;Programming profession;Clone Detection;Near-Miss Intentional Clones;Flexible Pretty-Printing;Flexible Code Normalization;Flexible Code Filtering},
doi={10.1109/ICPC.2008.41},
ISSN={1092-8138},
month={June},
}

@inproceedings{b3,
author = {Fraser, Gordon and Arcuri, Andrea},
title = {EvoSuite: Automatic Test Suite Generation for Object-oriented Software},
booktitle = {Proceedings of the Symposium on the Foundations of Software Engineering (FSE)},
pages = {416--419}, 
year = {2011},
} 


@book{b4,
  author = {Beck, Kent},
  publisher = {Addison-Wesley Longman, Amsterdam},
  title = {Test Driven Development. By Example (Addison-Wesley Signature)},
  year = 2002
}

@inproceedings{b5,
author={M. {Greiler} and A. {Zaidman} and A. {van Deursen} and M. {Storey}},
booktitle={2013 10th Working Conference on Mining Software Repositories (MSR)},
title={Strategies for avoiding text fixture smells during software evolution},
year={2013},
volume={},
number={},
pages={387-396},
keywords={configuration management;program testing;public domain software;software maintenance;text fixture smell avoidance;software evolution;automated tests;setup code;automated testing;test code quality;fixture-related test smells;open source systems;setup management strategies;code refactoring;Market research;Fixtures;Java;Dispersion;Testing;Software systems;test fixture smells;test evolution;maintenance},
doi={10.1109/MSR.2013.6624053},
ISSN={2160-1852},
month={May},
} 

@book{b6,
  author = {Meszaros, Gerard},
  publisher = {Addison-Wesley},
  title = {xUnit Test Patterns: Refactoring Test Code},
  year = {2007},
}

@techreport{b7,
 author = {Deursen, Arie and Moonen, Leon M.F. and Bergh, A. and Kok, Gerard},
 title = {Refactoring Test Code},
 year = {2001},
 publisher = {CWI (Centre for Mathematics and Computer Science)},
} 


@INPROCEEDINGS{b8,
author={D. {Spadini} and F. {Palomba} and A. {Zaidman} and M. {Bruntink} and A. {Bacchelli}},
booktitle={2018 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
title={On the Relation of Test Smells to Software Code Quality},
year={2018},
volume={},
number={},
pages={1-12},
keywords={program debugging;program testing;software maintenance;software metrics;software quality;software code quality;test code;software quality;tested production code;Eager Test;test smells relation;change-and defect-proneness;Assertion Roulette;Production;Software quality;Testing;Software systems;Measurement;Tools;test smells;code quality;automated testing},
doi={10.1109/ICSME.2018.00010},
ISSN={1063-6773},
month={Sep.},
}



@inproceedings{b9,
author = {Peruma, Anthony and Almalki, Khalid and Newman, Christian D. and Mkaouer, Mohamed Wiem and Ouni, Ali and Palomba, Fabio},
title = {On the Distribution of Test Smells in Open Source Android Applications: An Exploratory Study},
year = {2019},
booktitle = {Proceedings of the 29th Annual International Conference on Computer Science and Software Engineering (CASCON)},
pages = {193–202},
numpages = {10},
keywords = {test smells, software quality, unit test, software maintenance},
location = {Toronto, Ontario, Canada},
} 


%\bibitem{b12} P. Machado and A. Sampaio, ``Automatic Test-Case Generation," Testing Techniques in Software Eng., vol. 6153, pp. 59--103, 2010. 

@article{b12,
 author = {Hanford, K. V.},
 title = {Automatic Generation of Test Cases},
 journal = {IBM Syst. J.},
 volume = {9},
 number = {4},
 month = dec,
 year = {1970},
 pages = {242--257},
 numpages = {16}
} 

@inproceedings{b13,
author={S. {Panichella} and A. {Panichella} and M. {Beller} and A. {Zaidman} and H. C. {Gall}},
booktitle={2016 IEEE/ACM 38th International Conference on Software Engineering (ICSE)},
title={The Impact of Test Case Summaries on Bug Fixing Performance: An Empirical Investigation},
year={2016},
volume={},
number={},
pages={547-558},
keywords={program debugging;program testing;test case summaries;bug fixing performance;automated test generation tools;TestDescriber approach;automated unit test generation;search-based techniques;Testing;Computer bugs;Java;Software;Software engineering;Natural languages;Pragmatics;Software testing;Test Case Summarization;Empirical Study},
doi={10.1145/2884781.2884847},
ISSN={1558-1225},
month={May},
} 


@inproceedings{b14,
 author = {Daka, Ermira and Campos, Jos{\'e} and Fraser, Gordon and Dorn, Jonathan and Weimer, Westley},
 title = {Modeling Readability to Improve Unit Tests},
 booktitle = {Proceedings of the Joint Meeting on Foundations of Software Engineering (ESEC/FSE)},
 pages = {107--118},
 year = {2015}
} 


@inproceedings{b15,
 author = {Palomba, Fabio and Panichella, Annibale and Zaidman, Andy and Oliveto, Rocco and De Lucia, Andrea},
 title = {Automatic Test Case Generation: What if Test Code Quality Matters?},
 booktitle = {Proceedings of the International Symposium on Software Testing and Analysis (ISSTA)},
 pages = {130--141},
 year = {2016},
} 

@INPROCEEDINGS{b16,
author={L. {Ma} and C. {Artho} and C. {Zhang} and H. {Sato} and J. {Gmeiner} and R. {Ramler}},
booktitle={IEEE/ACM International Conference on Automated Software Engineering (ASE)},
title={GRT: Program-Analysis-Guided Random Testing (T)},
pages={212-223},
year={2015},
}

@INPROCEEDINGS{b17,
author={A. {Panichella} and F. M. {Kifetew} and P. {Tonella}},
booktitle={2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)},
title={Reformulating Branch Coverage as a Many-Objective Optimization Problem},
pages={1-10},
year={2015},
}


@inproceedings{b18,
 author = {Prasetya, I. S. W. B.},
 title = {T3: Benchmarking at Third Unit Testing Tool Contest},
 booktitle = {Proceedings of the Eighth International Workshop on Search-Based Software Testing},
 series = {SBST '15},
 year = {2015},
 pages = {44--47},
} 


@article{b19,
  title={Instance Generator and Problem Representation to Improve Object Oriented Code Coverage},
  author={Abdelilah Sakti and Gilles Pesant and Yann-Ga{\"e}l Gu{\'e}h{\'e}neuc},
  journal={IEEE Transactions on Software Engineering},
  pages={294--313},
  year={2015},
  volume={41},
}

@Article{b20,
author={Ellims, Michael and Bridges, James and Ince, Darrel C.},
title={The Economics of Unit Testing},
journal={Empirical Software Engineering},
year={2006},
volume={11},
number={1},
pages={5--31},
}


@book{b22,
 author = {Appel, Frank},
 title = {Testing with Junit},
 year = {2015},
 isbn = {1782166602, 9781782166603},
 publisher = {Packt Publishing},
} 


@inproceedings{Zhang:2017,
 author = {Zhang, Tianyi and Kim, Miryung},
 title = {Automated Transplantation and Differential Testing for Clones},
 booktitle = {Proc. of ICSE '17},
 year = {2017},
 pages = {665--676},
} 


@inproceedings{Jiang:2007,
 author = {Jiang, Lingxiao and Misherghi, Ghassan and Su, Zhendong and Glondu, Stephane},
 title = {{DECKARD}: Scalable and Accurate Tree-Based Detection of Code Clones},
 booktitle = {Proceedings of the International Conference on Software Engineering},
 pages = {96--105},
 year = {2007},
} 

@Article{soha:2013,
 author = {Makady,Soha and Walker,Robert James},
 title = {Validating pragmatic reuse tasks by leveraging existing test suites},
 journal = {Software Practice and Experience},
 pages = {1039--1070},
 year = {2013},
} 

@inproceedings{Fabio2016,
 author = {Palomba,Fabio and Nucci,Dario Di and Panichella,Annibale and Oliveto,Rocco and Lucia,Andrea De},
 title = {On the Diffusion of Test Smells in Automatically Generated Test Code: An Empirical Study},
 booktitle = {Proceedings of the International Workshop on Search-Based Software Testing},
 pages = {5--14},
 year = {2016}
} 

@Article{c1,
  author = {肥後芳樹, and 楠本真二,井上克郎},
  title = {コードクローン検出とその関連技術},
  journal = {電子情報通信学会論文誌},
  year={2008},
  volume={J91--D},
  number={6},
  pages={1465--1481},
} 

